AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: S3 buckets infrastructure

Parameters:
  RawMediaBucketName:
    Type: String
    Description: Media bucket name

  ProcessedMediaBucketName:
    Type: String
    Description: Media bucket name

Resources:
  # Lambda layers
  AwsUtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: AwsUtilsLayer-S3
      Description: Layer that contains common aws utils (like boto3)
      ContentUri: src/layers/aws_utils_layer/
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9

  # Lambdas
  ImageProcessingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/image_processing_function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Layers:
        - !Ref AwsUtilsLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref RawMediaBucketName
        - S3CrudPolicy:
            BucketName: !Ref ProcessedMediaBucketName
      Environment:
        Variables:
          PROCESSED_MEDIA_BUCKET: !Ref ProcessedMediaBucketName

  VideoProcessingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/video_processing_function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Layers:
        - !Ref AwsUtilsLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref RawMediaBucketName
        - S3CrudPolicy:
            BucketName: !Ref ProcessedMediaBucketName
      Environment:
        Variables:
          PROCESSED_MEDIA_BUCKET: !Ref ProcessedMediaBucketName

  MediaProcessingDispatcher:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambdas/media_processing_dispatcher/
      Handler: app.lambda_handler
      Runtime: python3.9
      Layers:
        - !Ref AwsUtilsLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref RawMediaBucketName
        - S3CrudPolicy:
            BucketName: !Ref ProcessedMediaBucketName
      Environment:
        Variables:
          IMAGE_PROCESSING_FUNCTION_ARN: !GetAtt ImageProcessingFunction.Arn
          VIDEO_PROCESSING_FUNCTION_ARN: !GetAtt VideoProcessingFunction.Arn

  # Permissions
  RawMediaBucketEventPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - MediaProcessingDispatcher
    Properties:
      Action: lambda:invokeFunction
      SourceAccount: !Ref AWS::AccountId
      FunctionName: !Ref MediaProcessingDispatcher
      SourceArn: !Sub "arn:aws:s3:::${RawMediaBucketName}"
      Principal: s3.amazonaws.com

  # Buckets
  RawMediaBucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - MediaProcessingDispatcher
      - RawMediaBucketEventPermission
    Properties:
      BucketName: !Ref RawMediaBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Function: !GetAtt MediaProcessingDispatcher.Arn
            Event: s3:ObjectCreated:*

  ProcessedMediaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ProcessedMediaBucketName
      LifecycleConfiguration:
        Rules:
          - Id: DeleteAfter30Days
            Status: Enabled
            ExpirationInDays: 30
